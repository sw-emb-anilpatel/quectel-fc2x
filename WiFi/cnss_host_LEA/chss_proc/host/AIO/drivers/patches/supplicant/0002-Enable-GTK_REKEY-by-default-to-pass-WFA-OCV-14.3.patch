From 8f6c6074163153546eeb2185f9d584f6842474bb Mon Sep 17 00:00:00 2001
From: Lihua Liu <quic_lihual@quicinc.com>
Date: Mon, 24 Jan 2022 14:35:21 +0800
Subject: [PATCH] Enable GTK_REKEY by default to pass WFA OCV 14.3

Currently, GTK_REKEY process is under CONFIG_TESTING_OPTIONS.
To support GTK_REKEY for WFA test case, enable it by default.

Signed-off-by: Lihua Liu <quic_lihual@quicinc.com>
---
 hostapd/ctrl_iface.c |  6 +++---
 src/ap/wpa_auth.c    | 19 ++++++++++---------
 2 files changed, 13 insertions(+), 12 deletions(-)

diff --git a/hostapd/ctrl_iface.c b/hostapd/ctrl_iface.c
index 4a2d606..f030778 100644
--- a/hostapd/ctrl_iface.c
+++ b/hostapd/ctrl_iface.c
@@ -3738,9 +3738,6 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 	} else if (os_strncmp(buf, "REKEY_PTK ", 10) == 0) {
 		if (hostapd_ctrl_rekey_ptk(hapd, buf + 10) < 0)
 			reply_len = -1;
-	} else if (os_strcmp(buf, "REKEY_GTK") == 0) {
-		if (wpa_auth_rekey_gtk(hapd->wpa_auth) < 0)
-			reply_len = -1;
 	} else if (os_strncmp(buf, "GET_PMK ", 8) == 0) {
 		reply_len = hostapd_ctrl_get_pmk(hapd, buf + 8, reply,
 						 reply_size);
@@ -3748,6 +3745,9 @@ static int hostapd_ctrl_iface_receive_process(struct hostapd_data *hapd,
 		if (hostapd_ctrl_register_frame(hapd, buf + 16) < 0)
 			reply_len = -1;
 #endif /* CONFIG_TESTING_OPTIONS */
+	} else if (os_strcmp(buf, "REKEY_GTK") == 0) {
+		if (wpa_auth_rekey_gtk(hapd->wpa_auth) < 0)
+			reply_len = -1;
 	} else if (os_strncmp(buf, "CHAN_SWITCH ", 12) == 0) {
 		if (hostapd_ctrl_iface_chan_switch(hapd->iface, buf + 12))
 			reply_len = -1;
diff --git a/src/ap/wpa_auth.c b/src/ap/wpa_auth.c
index 8380568..5983fc0 100644
--- a/src/ap/wpa_auth.c
+++ b/src/ap/wpa_auth.c
@@ -5636,15 +5636,6 @@ int wpa_auth_resend_group_m1(struct wpa_state_machine *sm,
 }
 
 
-int wpa_auth_rekey_gtk(struct wpa_authenticator *wpa_auth)
-{
-	if (!wpa_auth)
-		return -1;
-	eloop_cancel_timeout(wpa_rekey_gtk, wpa_auth, NULL);
-	return eloop_register_timeout(0, 0, wpa_rekey_gtk, wpa_auth, NULL);
-}
-
-
 int wpa_auth_rekey_ptk(struct wpa_authenticator *wpa_auth,
 		       struct wpa_state_machine *sm)
 {
@@ -5687,3 +5678,13 @@ void wpa_auth_set_ocv_override_freq(struct wpa_authenticator *wpa_auth,
 }
 
 #endif /* CONFIG_TESTING_OPTIONS */
+
+
+int wpa_auth_rekey_gtk(struct wpa_authenticator *wpa_auth)
+{
+	if (!wpa_auth)
+		return -1;
+	eloop_cancel_timeout(wpa_rekey_gtk, wpa_auth, NULL);
+	return eloop_register_timeout(0, 0, wpa_rekey_gtk, wpa_auth, NULL);
+}
+
-- 
2.7.4

